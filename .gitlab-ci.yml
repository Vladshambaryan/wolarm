# image: mcr.microsoft.com/playwright/python:latest  # –ë–∞–∑–æ–≤—ã–π Docker-–æ–±—Ä–∞–∑ —Å Playwright –∏ Python

# stages:
#   - baseline        # –≠—Ç–∞–ø –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —ç—Ç–∞–ª–æ–Ω–æ–≤
#   - test            # –≠—Ç–∞–ø —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å —ç—Ç–∞–ª–æ–Ω–∞–º–∏

# before_script:
#   - pip install -r requirements.txt                # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞
#   - playwright install --with-deps                 # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±—Ä–∞—É–∑–µ—Ä–æ–≤ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Playwright

# # üîß –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ baseline –ø–æ –≤—Å–µ–º test_verstka.py
# generate_baseline:
#   stage: baseline                                   # –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–∞–ø–∞ pipeline
#   script:
#     - |
#       echo "üõ† –†—É—á–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è baseline..."
#       for f in $(find . -name test_verstka.py); do
#         echo "‚û°Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ baseline: $f"
#         UPDATE_BASELINE=true pytest "$f" -v || exit 1
#       done
#   artifacts:
#     paths:
#       - '**/baseline/'                              # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ baseline –∏–∑ –≤—Å–µ—Ö –ø–æ–¥–ø–∞–ø–æ–∫
#     expire_in: 1 week                               # –°—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è ‚Äî –æ–¥–Ω–∞ –Ω–µ–¥–µ–ª—è
#   when: manual                                      # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é
#   allow_failure: false                              # –û—à–∏–±–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç pipeline

# # üìã –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –≤—ë—Ä—Å—Ç–∫–∏ —Å —ç—Ç–∞–ª–æ–Ω–æ–º (–µ—Å–ª–∏ –æ–Ω —É–∂–µ –µ—Å—Ç—å)
# compare_layout:
#   stage: test                                       # –≠—Ç–∞–ø —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
#   dependencies:
#     - generate_baseline                             # –ó–∞–≤–∏—Å–∏—Ç –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —à–∞–≥–∞
#   script:
#     - |
#       echo "üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—ë—Ä—Å—Ç–∫–∏ —Å baseline..."
#       for f in $(find . -name test_verstka.py); do
#         echo "‚ñ∂Ô∏è –¢–µ—Å—Ç: $f"
#         pytest "$f" -v || exit 1
#       done
#   artifacts:
#     paths:
#       - '**/baseline/'                              # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ baseline-–¥–∞–Ω–Ω—ã—Ö
#       - allure-results/                             # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á—ë—Ç–æ–≤ Allure (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
#     when: always                                    # –°–æ—Ö—Ä–∞–Ω—è—Ç—å –≤—Å–µ–≥–¥–∞
#     expire_in: 1 week                               # –°—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è ‚Äî –æ–¥–Ω–∞ –Ω–µ–¥–µ–ª—è



Run all tests:
  when: manual
  image: vladshambaryan/git_lab_play
  artifacts:
    when: always
    expire_in: 10 days
    paths:
      - allure-report
  before_script:
    - pip install -r requirements.txt
    - playwright install
  script:
    - pytest --alluredir=allure-results || true   # —á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞–ª –Ω–∞ –æ—à–∏–±–∫–∞—Ö
  after_script:
    - allure generate -c allure-results -o allure-report
    - echo "Report path:https://vladshambaryan.gitlab.io/-/wolarm/-/jobs/${CI_JOB_ID}/artifacts/allure-report/index.html"


        



